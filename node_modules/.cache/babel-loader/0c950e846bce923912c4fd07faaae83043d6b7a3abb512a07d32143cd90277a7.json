{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\n\n// Custom hook for invoice management with improved error handling and performance\nexport const useInvoices = showToast => {\n  _s();\n  const [invoices, setInvoices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load invoices from localStorage on mount\n  useEffect(() => {\n    setLoading(true);\n    try {\n      const savedInvoices = localStorage.getItem('invoices');\n      if (savedInvoices) {\n        const parsedInvoices = JSON.parse(savedInvoices);\n        setInvoices(parsedInvoices);\n      }\n    } catch (err) {\n      setError('Failed to load invoices from storage');\n      console.error('Error loading invoices:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Save invoices to localStorage whenever invoices change\n  useEffect(() => {\n    if (invoices.length > 0) {\n      try {\n        localStorage.setItem('invoices', JSON.stringify(invoices));\n      } catch (err) {\n        setError('Failed to save invoices to storage');\n        console.error('Error saving invoices:', err);\n      }\n    }\n  }, [invoices]);\n\n  // Create invoice with better error handling\n  const createInvoice = useCallback(invoiceData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const newInvoice = {\n        ...invoiceData,\n        id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        createdAt: new Date().toISOString(),\n        status: 'draft'\n      };\n      setInvoices(prevInvoices => [...prevInvoices, newInvoice]);\n      showToast === null || showToast === void 0 ? void 0 : showToast.showSuccess('Invoice created successfully!');\n      return {\n        success: true,\n        invoice: newInvoice\n      };\n    } catch (err) {\n      setError('Failed to create invoice');\n      showToast === null || showToast === void 0 ? void 0 : showToast.showError('Failed to create invoice');\n      console.error('Error creating invoice:', err);\n      return {\n        success: false,\n        error: err.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, [showToast]);\n\n  // Update invoice\n  const updateInvoice = useCallback((id, updatedData) => {\n    setLoading(true);\n    setError(null);\n    try {\n      setInvoices(prevInvoices => prevInvoices.map(invoice => invoice.id === id ? {\n        ...invoice,\n        ...updatedData\n      } : invoice));\n      showToast === null || showToast === void 0 ? void 0 : showToast.showSuccess('Invoice updated successfully!');\n      return {\n        success: true\n      };\n    } catch (err) {\n      setError('Failed to update invoice');\n      showToast === null || showToast === void 0 ? void 0 : showToast.showError('Failed to update invoice');\n      console.error('Error updating invoice:', err);\n      return {\n        success: false,\n        error: err.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, [showToast]);\n\n  // Delete invoice\n  const deleteInvoice = useCallback(id => {\n    setLoading(true);\n    setError(null);\n    try {\n      setInvoices(prevInvoices => prevInvoices.filter(invoice => invoice.id !== id));\n      showToast === null || showToast === void 0 ? void 0 : showToast.showSuccess('Invoice deleted successfully!');\n      return {\n        success: true\n      };\n    } catch (err) {\n      setError('Failed to delete invoice');\n      showToast === null || showToast === void 0 ? void 0 : showToast.showError('Failed to delete invoice');\n      console.error('Error deleting invoice:', err);\n      return {\n        success: false,\n        error: err.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, [showToast]);\n\n  // Export invoices\n  const exportInvoices = useCallback(() => {\n    try {\n      const data = JSON.stringify(invoices, null, 2);\n      const blob = new Blob([data], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `invoices-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      showToast === null || showToast === void 0 ? void 0 : showToast.showSuccess(`Exported ${invoices.length} invoices successfully!`);\n      return {\n        success: true\n      };\n    } catch (err) {\n      setError('Failed to export invoices');\n      showToast === null || showToast === void 0 ? void 0 : showToast.showError('Failed to export invoices');\n      console.error('Error exporting invoices:', err);\n      return {\n        success: false,\n        error: err.message\n      };\n    }\n  }, [invoices, showToast]);\n\n  // Import invoices\n  const importInvoices = useCallback(file => {\n    setLoading(true);\n    setError(null);\n    return new Promise(resolve => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const importedData = JSON.parse(e.target.result);\n          if (Array.isArray(importedData)) {\n            setInvoices(importedData);\n            showToast === null || showToast === void 0 ? void 0 : showToast.showSuccess(`Imported ${importedData.length} invoices successfully!`);\n            resolve({\n              success: true,\n              count: importedData.length\n            });\n          } else {\n            throw new Error('Invalid file format');\n          }\n        } catch (err) {\n          setError('Failed to import invoices');\n          showToast === null || showToast === void 0 ? void 0 : showToast.showError('Failed to import invoices. Please check the file format.');\n          console.error('Error importing invoices:', err);\n          resolve({\n            success: false,\n            error: err.message\n          });\n        } finally {\n          setLoading(false);\n        }\n      };\n      reader.onerror = () => {\n        setError('Failed to read file');\n        showToast === null || showToast === void 0 ? void 0 : showToast.showError('Failed to read file');\n        setLoading(false);\n        resolve({\n          success: false,\n          error: 'Failed to read file'\n        });\n      };\n      reader.readAsText(file);\n    });\n  }, [showToast]);\n\n  // Clear error\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n  return {\n    invoices,\n    loading,\n    error,\n    createInvoice,\n    updateInvoice,\n    deleteInvoice,\n    exportInvoices,\n    importInvoices,\n    clearError\n  };\n};\n_s(useInvoices, \"QdbeXodVZuFkpkl1l0L1rxq8/jY=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useInvoices","showToast","_s","invoices","setInvoices","loading","setLoading","error","setError","savedInvoices","localStorage","getItem","parsedInvoices","JSON","parse","err","console","length","setItem","stringify","createInvoice","invoiceData","newInvoice","id","Date","now","Math","random","toString","substr","createdAt","toISOString","status","prevInvoices","showSuccess","success","invoice","showError","message","updateInvoice","updatedData","map","deleteInvoice","filter","exportInvoices","data","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","split","body","appendChild","click","removeChild","revokeObjectURL","importInvoices","file","Promise","resolve","reader","FileReader","onload","e","importedData","target","result","Array","isArray","count","Error","onerror","readAsText","clearError"],"sources":["/workspace/src/hooks/useInvoices.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\n// Custom hook for invoice management with improved error handling and performance\nexport const useInvoices = (showToast) => {\n  const [invoices, setInvoices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load invoices from localStorage on mount\n  useEffect(() => {\n    setLoading(true);\n    try {\n      const savedInvoices = localStorage.getItem('invoices');\n      if (savedInvoices) {\n        const parsedInvoices = JSON.parse(savedInvoices);\n        setInvoices(parsedInvoices);\n      }\n    } catch (err) {\n      setError('Failed to load invoices from storage');\n      console.error('Error loading invoices:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Save invoices to localStorage whenever invoices change\n  useEffect(() => {\n    if (invoices.length > 0) {\n      try {\n        localStorage.setItem('invoices', JSON.stringify(invoices));\n      } catch (err) {\n        setError('Failed to save invoices to storage');\n        console.error('Error saving invoices:', err);\n      }\n    }\n  }, [invoices]);\n\n  // Create invoice with better error handling\n  const createInvoice = useCallback((invoiceData) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const newInvoice = {\n        ...invoiceData,\n        id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        createdAt: new Date().toISOString(),\n        status: 'draft'\n      };\n      \n      setInvoices(prevInvoices => [...prevInvoices, newInvoice]);\n      showToast?.showSuccess('Invoice created successfully!');\n      return { success: true, invoice: newInvoice };\n    } catch (err) {\n      setError('Failed to create invoice');\n      showToast?.showError('Failed to create invoice');\n      console.error('Error creating invoice:', err);\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  }, [showToast]);\n\n  // Update invoice\n  const updateInvoice = useCallback((id, updatedData) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      setInvoices(prevInvoices => \n        prevInvoices.map(invoice => \n          invoice.id === id ? { ...invoice, ...updatedData } : invoice\n        )\n      );\n      showToast?.showSuccess('Invoice updated successfully!');\n      return { success: true };\n    } catch (err) {\n      setError('Failed to update invoice');\n      showToast?.showError('Failed to update invoice');\n      console.error('Error updating invoice:', err);\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  }, [showToast]);\n\n  // Delete invoice\n  const deleteInvoice = useCallback((id) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      setInvoices(prevInvoices => \n        prevInvoices.filter(invoice => invoice.id !== id)\n      );\n      showToast?.showSuccess('Invoice deleted successfully!');\n      return { success: true };\n    } catch (err) {\n      setError('Failed to delete invoice');\n      showToast?.showError('Failed to delete invoice');\n      console.error('Error deleting invoice:', err);\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  }, [showToast]);\n\n  // Export invoices\n  const exportInvoices = useCallback(() => {\n    try {\n      const data = JSON.stringify(invoices, null, 2);\n      const blob = new Blob([data], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `invoices-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      showToast?.showSuccess(`Exported ${invoices.length} invoices successfully!`);\n      return { success: true };\n    } catch (err) {\n      setError('Failed to export invoices');\n      showToast?.showError('Failed to export invoices');\n      console.error('Error exporting invoices:', err);\n      return { success: false, error: err.message };\n    }\n  }, [invoices, showToast]);\n\n  // Import invoices\n  const importInvoices = useCallback((file) => {\n    setLoading(true);\n    setError(null);\n    \n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      \n      reader.onload = (e) => {\n        try {\n          const importedData = JSON.parse(e.target.result);\n          if (Array.isArray(importedData)) {\n            setInvoices(importedData);\n            showToast?.showSuccess(`Imported ${importedData.length} invoices successfully!`);\n            resolve({ success: true, count: importedData.length });\n          } else {\n            throw new Error('Invalid file format');\n          }\n        } catch (err) {\n          setError('Failed to import invoices');\n          showToast?.showError('Failed to import invoices. Please check the file format.');\n          console.error('Error importing invoices:', err);\n          resolve({ success: false, error: err.message });\n        } finally {\n          setLoading(false);\n        }\n      };\n      \n      reader.onerror = () => {\n        setError('Failed to read file');\n        showToast?.showError('Failed to read file');\n        setLoading(false);\n        resolve({ success: false, error: 'Failed to read file' });\n      };\n      \n      reader.readAsText(file);\n    });\n  }, [showToast]);\n\n  // Clear error\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  return {\n    invoices,\n    loading,\n    error,\n    createInvoice,\n    updateInvoice,\n    deleteInvoice,\n    exportInvoices,\n    importInvoices,\n    clearError\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}